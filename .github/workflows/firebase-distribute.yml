name: Build & Distribute APK to Firebase

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: Build and Distribute to Firebase
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      - name: 💎 Setup Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - name: 💾 Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore

      - name: 🧩 Set Gradle Properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties

      - name: 🧹 Clean Gradle Cache (to avoid Kotlin 2.1.0 artifacts)
        run: |
          rm -rf ~/.gradle/caches/
          rm -rf ~/.gradle/daemon/
          rm -rf ~/.gradle/native/
          rm -rf ~/.gradle/wrapper/

      - name: 📦 Install Node Modules & Verify Plugin Resolution
        run: |
          npm install --legacy-peer-deps
          echo "✅ react-native path:"
          node --print "require.resolve('react-native/package.json')"
          echo "✅ gradle-plugin path:"
          node --print "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
          echo "✅ expo path (optional):"
          node --print "require.resolve('expo/package.json')" || echo "expo not found"

      - name: 📦 Install Fastlane Dependencies
        working-directory: android
        run: bundle install

      - name: 🔐 Authenticate Firebase CLI
        run: echo "${{ secrets.FIREBASE_TOKEN }}" > ~/.firebase_token

      - name: 🛠 Fix Gradlew Permission
        run: chmod +x android/gradlew

      - name: 🧪 Run Kotlin Compilation Check with Debug Logs
        working-directory: android
        run: |
          echo "🧪 Running Kotlin compile diagnostics..."
          ./gradlew assembleRelease --stacktrace --info || true

      - name: 🚀 Distribute via Fastlane
        working-directory: android
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: bundle exec fastlane beta

      - name: Upload APK to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          artifacts: android/app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            🚀 Automatic release for build run #${{ github.run_number }}
